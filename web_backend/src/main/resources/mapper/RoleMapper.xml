<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ooad.xproject.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.ooad.xproject.entity.Role">
        <id column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="role_type" property="roleType" jdbcType="CHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        role_id, role_type, username, password, status
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from roles
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from roles
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.ooad.xproject.entity.Role">
        <selectKey resultType="java.lang.Integer" keyProperty="roleId" order="AFTER">
            Postgres
        </selectKey>
        insert into roles (role_type, username, password,
        status)
        values (#{roleType,jdbcType=CHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{status,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ooad.xproject.entity.Role">
        <selectKey resultType="java.lang.Integer" keyProperty="roleId" order="AFTER">
            Postgres
        </selectKey>
        insert into roles
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleType != null">
                role_type,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleType != null">
                #{roleType,jdbcType=CHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ooad.xproject.entity.Role">
        update roles
        <set>
            <if test="roleType != null">
                role_type = #{roleType,jdbcType=CHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ooad.xproject.entity.Role">
        update roles
        set role_type = #{roleType,jdbcType=CHAR},
            username  = #{username,jdbcType=VARCHAR},
            password  = #{password,jdbcType=VARCHAR},
            status    = #{status,jdbcType=CHAR}
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>

    <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from roles
        where username = #{userName}
    </select>
    <select id="selectByUsername1" resultType="com.ooad.xproject.entity.Role">
        select from roles where username = #{userName}
    </select>

</mapper>